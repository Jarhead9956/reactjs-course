{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\11-practice-food-order-app\\\\code\\\\01-starting-project\\\\src\\\\components\\\\order-confirmation-form\\\\ConfirmationForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useInput from '../../hooks/use-input';\nimport styles from './ConfirmationForm.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkIsEmpty = value => value.trim() !== '';\n\nconst ConfirmationForm = () => {\n  _s();\n\n  const {\n    enteredValue: firstNameVAlue,\n    isTouched: firstNameIsTouched,\n    valueIsValid: firstNameIsValid,\n    hasError: firstNameError,\n    changeValueHandler: firstNameValueHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: firstNameReset\n  } = useInput(checkIsEmpty);\n  const {\n    enteredValue: lastNameVAlue,\n    isTouched: lastNameIsTouched,\n    valueIsValid: lastNameIsValid,\n    hasError: lastNameError,\n    changeValueHandler: lastNameValueHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: lastNameReset\n  } = useInput(checkIsEmpty);\n  const {\n    enteredValue: addresVAlue,\n    isTouched: addressIsTouched,\n    valueIsValid: addreIsValid,\n    hasError: addressError,\n    changeValueHandler: addressValueHandler,\n    inputBlurHandler: addressBlurHandler,\n    reset: addressReset\n  } = useInput(checkIsEmpty);\n  const {\n    enteredValue: phoneVAlue,\n    isTouched: phoneIsTouched,\n    hasError: phoneError,\n    changeValueHandler: phoneValueHandler,\n    inputBlurHandler: phoneBlurHandler,\n    reset: phoneReset\n  } = useInput(checkIsEmpty);\n  let formIsValid = false; // if(phoneError && addressError && lastNameError && firstNameError) {\n  //     formIsValid = true\n  // }\n\n  console.log(phoneError);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${firstNameError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"first-name\",\n        onChange: firstNameValueHandler,\n        onBlur: firstNameBlurHandler,\n        value: firstNameVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), firstNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First name should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${lastNameError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"last-name\",\n        children: \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"last-name\",\n        onChange: lastNameValueHandler,\n        onBlur: lastNameBlurHandler,\n        value: lastNameVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), lastNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last name should not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${addressError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        onChange: addressValueHandler,\n        onBlur: addressBlurHandler,\n        value: addresVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), addressError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${phoneError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"phone\",\n        onChange: phoneValueHandler,\n        onBlur: phoneBlurHandler,\n        value: phoneVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), phoneError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid phone number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formIsValid,\n        className: `${!formIsValid ? styles.disabled : ''}`,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConfirmationForm, \"p7yHdcTNWctSkLEHSHGRCThBwbE=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = ConfirmationForm;\nexport default ConfirmationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationForm\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/11-practice-food-order-app/code/01-starting-project/src/components/order-confirmation-form/ConfirmationForm.js"],"names":["React","useInput","styles","Button","checkIsEmpty","value","trim","ConfirmationForm","enteredValue","firstNameVAlue","isTouched","firstNameIsTouched","valueIsValid","firstNameIsValid","hasError","firstNameError","changeValueHandler","firstNameValueHandler","inputBlurHandler","firstNameBlurHandler","reset","firstNameReset","lastNameVAlue","lastNameIsTouched","lastNameIsValid","lastNameError","lastNameValueHandler","lastNameBlurHandler","lastNameReset","addresVAlue","addressIsTouched","addreIsValid","addressError","addressValueHandler","addressBlurHandler","addressReset","phoneVAlue","phoneIsTouched","phoneError","phoneValueHandler","phoneBlurHandler","phoneReset","formIsValid","console","log","form","error","buttons","disabled"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport useInput from '../../hooks/use-input'\r\n\r\nimport styles from './ConfirmationForm.module.css'\r\n\r\nimport Button from '../UI/Button'\r\n\r\nconst checkIsEmpty = (value) => value.trim() !== ''\r\n\r\nconst ConfirmationForm = () => {\r\n\r\n    const {\r\n        enteredValue: firstNameVAlue,\r\n        isTouched: firstNameIsTouched,\r\n        valueIsValid: firstNameIsValid,\r\n        hasError: firstNameError,\r\n        changeValueHandler: firstNameValueHandler,\r\n        inputBlurHandler: firstNameBlurHandler,\r\n        reset: firstNameReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    const {\r\n        enteredValue: lastNameVAlue,\r\n        isTouched: lastNameIsTouched,\r\n        valueIsValid: lastNameIsValid,\r\n        hasError: lastNameError,\r\n        changeValueHandler: lastNameValueHandler,\r\n        inputBlurHandler: lastNameBlurHandler,\r\n        reset: lastNameReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    const {\r\n        enteredValue: addresVAlue,\r\n        isTouched: addressIsTouched,\r\n        valueIsValid: addreIsValid,\r\n        hasError: addressError,\r\n        changeValueHandler: addressValueHandler,\r\n        inputBlurHandler: addressBlurHandler,\r\n        reset: addressReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    const {\r\n        enteredValue: phoneVAlue,\r\n        isTouched: phoneIsTouched,\r\n        hasError: phoneError,\r\n        changeValueHandler: phoneValueHandler,\r\n        inputBlurHandler: phoneBlurHandler,\r\n        reset: phoneReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    let formIsValid = false\r\n\r\n    // if(phoneError && addressError && lastNameError && firstNameError) {\r\n    //     formIsValid = true\r\n    // }\r\n\r\n    console.log(phoneError)\r\n\r\n    return (\r\n        <form className={styles.form}>\r\n            <div className={`${styles['input-wrapper']} ${firstNameError ? styles.error : ''}`}>\r\n                <label htmlFor='first-name'>First Name</label>\r\n                <input \r\n                    type='text' \r\n                    id='first-name' \r\n                    onChange={firstNameValueHandler} \r\n                    onBlur={firstNameBlurHandler}\r\n                    value={firstNameVAlue} \r\n                />\r\n                {firstNameError && <p>First name should not be empty</p>}\r\n            </div>\r\n\r\n            <div className={`${styles['input-wrapper']} ${lastNameError ? styles.error : ''}`}>\r\n                <label htmlFor='last-name'>Last name</label>\r\n                <input \r\n                    type='text' \r\n                    id='last-name'\r\n                    onChange={lastNameValueHandler} \r\n                    onBlur={lastNameBlurHandler}\r\n                    value={lastNameVAlue} \r\n                />\r\n                {lastNameError && <p>Last name should not be empty.</p>}\r\n            </div>\r\n\r\n            <div className={`${styles['input-wrapper']} ${addressError ? styles.error : ''}`}>\r\n                <label htmlFor='address'>Address</label>\r\n                <input \r\n                    type='text'  \r\n                    id='address'\r\n                    onChange={addressValueHandler} \r\n                    onBlur={addressBlurHandler}\r\n                    value={addresVAlue}\r\n                />\r\n                {addressError && <p>Please enter valid address.</p>}\r\n            </div>\r\n\r\n            <div className={`${styles['input-wrapper']} ${phoneError ? styles.error : ''}`}>\r\n                <label htmlFor='phone'>Phone</label>\r\n                <input \r\n                    type='tel' \r\n                    id='phone'\r\n                    onChange={phoneValueHandler} \r\n                    onBlur={phoneBlurHandler}\r\n                    value={phoneVAlue}\r\n                />\r\n                {phoneError && <p>Please enter valid phone number.</p>}\r\n            </div>\r\n\r\n            <div className={styles.buttons}>\r\n                <Button type='button'>Back</Button>\r\n                <Button type='submit' disabled={!formIsValid} className={`${!formIsValid ? styles.disabled : ''}`}>Order</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ConfirmationForm"]},"metadata":{},"sourceType":"module"}