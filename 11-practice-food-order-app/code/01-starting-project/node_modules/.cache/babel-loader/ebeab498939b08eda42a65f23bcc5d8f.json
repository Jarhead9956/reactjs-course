{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\11-practice-food-order-app\\\\code\\\\01-starting-project\\\\src\\\\components\\\\order-confirmation-form\\\\ConfirmationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useInput from '../../hooks/use-input';\nimport useHttp from '../../hooks/use-http';\nimport OrderedMealContext from '../contexts/orderedMeal-Context';\nimport styles from './ConfirmationForm.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkIsEmpty = value => value.trim() !== '';\n\nconst ConfirmationForm = () => {\n  _s();\n\n  const orderedMealContext = useContext(OrderedMealContext);\n  const {\n    enteredValue: firstNameVAlue,\n    isTouched: firstNameIsTouched,\n    valueIsValid: firstNameIsValid,\n    hasError: firstNameError,\n    changeValueHandler: firstNameValueHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: firstNameReset\n  } = useInput(checkIsEmpty);\n  const {\n    enteredValue: lastNameVAlue,\n    isTouched: lastNameIsTouched,\n    valueIsValid: lastNameIsValid,\n    hasError: lastNameError,\n    changeValueHandler: lastNameValueHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: lastNameReset\n  } = useInput(checkIsEmpty);\n  const {\n    enteredValue: addresVAlue,\n    isTouched: addressIsTouched,\n    valueIsValid: addressIsValid,\n    hasError: addressError,\n    changeValueHandler: addressValueHandler,\n    inputBlurHandler: addressBlurHandler,\n    reset: addressReset\n  } = useInput(checkIsEmpty);\n  const {\n    enteredValue: phoneVAlue,\n    isTouched: phoneIsTouched,\n    valueIsValid: phoneIsValid,\n    hasError: phoneError,\n    changeValueHandler: phoneValueHandler,\n    inputBlurHandler: phoneBlurHandler,\n    reset: phoneReset\n  } = useInput(checkIsEmpty);\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && addressIsValid && phoneIsValid) {\n    formIsValid = true;\n  }\n\n  const orderFormHandler = event => {\n    event.preventDefault();\n    console.log(orderedMealContext.meals);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: orderFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${firstNameError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"first-name\",\n        onChange: firstNameValueHandler,\n        onBlur: firstNameBlurHandler,\n        value: firstNameVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), firstNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First name should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${lastNameError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"last-name\",\n        children: \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"last-name\",\n        onChange: lastNameValueHandler,\n        onBlur: lastNameBlurHandler,\n        value: lastNameVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), lastNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last name should not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${addressError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        onChange: addressValueHandler,\n        onBlur: addressBlurHandler,\n        value: addresVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), addressError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-wrapper']} ${phoneError ? styles.error : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"phone\",\n        onChange: phoneValueHandler,\n        onBlur: phoneBlurHandler,\n        value: phoneVAlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), phoneError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid phone number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formIsValid,\n        className: `${!formIsValid ? styles.disabled : ''}`,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConfirmationForm, \"ijJQN8hSGx2EA/mIqqClZkjZaCY=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = ConfirmationForm;\nexport default ConfirmationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationForm\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/11-practice-food-order-app/code/01-starting-project/src/components/order-confirmation-form/ConfirmationForm.js"],"names":["React","useContext","useInput","useHttp","OrderedMealContext","styles","Button","checkIsEmpty","value","trim","ConfirmationForm","orderedMealContext","enteredValue","firstNameVAlue","isTouched","firstNameIsTouched","valueIsValid","firstNameIsValid","hasError","firstNameError","changeValueHandler","firstNameValueHandler","inputBlurHandler","firstNameBlurHandler","reset","firstNameReset","lastNameVAlue","lastNameIsTouched","lastNameIsValid","lastNameError","lastNameValueHandler","lastNameBlurHandler","lastNameReset","addresVAlue","addressIsTouched","addressIsValid","addressError","addressValueHandler","addressBlurHandler","addressReset","phoneVAlue","phoneIsTouched","phoneIsValid","phoneError","phoneValueHandler","phoneBlurHandler","phoneReset","formIsValid","orderFormHandler","event","preventDefault","console","log","meals","form","error","buttons","disabled"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react'\r\nimport useInput from '../../hooks/use-input'\r\nimport useHttp from '../../hooks/use-http'\r\nimport OrderedMealContext from '../contexts/orderedMeal-Context'\r\n\r\nimport styles from './ConfirmationForm.module.css'\r\n\r\nimport Button from '../UI/Button'\r\n\r\nconst checkIsEmpty = (value) => value.trim() !== ''\r\n\r\nconst ConfirmationForm = () => {\r\n\r\n    const orderedMealContext = useContext(OrderedMealContext)\r\n\r\n    const {\r\n        enteredValue: firstNameVAlue,\r\n        isTouched: firstNameIsTouched,\r\n        valueIsValid: firstNameIsValid,\r\n        hasError: firstNameError,\r\n        changeValueHandler: firstNameValueHandler,\r\n        inputBlurHandler: firstNameBlurHandler,\r\n        reset: firstNameReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    const {\r\n        enteredValue: lastNameVAlue,\r\n        isTouched: lastNameIsTouched,\r\n        valueIsValid: lastNameIsValid,\r\n        hasError: lastNameError,\r\n        changeValueHandler: lastNameValueHandler,\r\n        inputBlurHandler: lastNameBlurHandler,\r\n        reset: lastNameReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    const {\r\n        enteredValue: addresVAlue,\r\n        isTouched: addressIsTouched,\r\n        valueIsValid: addressIsValid,\r\n        hasError: addressError,\r\n        changeValueHandler: addressValueHandler,\r\n        inputBlurHandler: addressBlurHandler,\r\n        reset: addressReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    const {\r\n        enteredValue: phoneVAlue,\r\n        isTouched: phoneIsTouched,\r\n        valueIsValid: phoneIsValid,\r\n        hasError: phoneError,\r\n        changeValueHandler: phoneValueHandler,\r\n        inputBlurHandler: phoneBlurHandler,\r\n        reset: phoneReset\r\n    } = useInput(checkIsEmpty)\r\n\r\n    let formIsValid = false\r\n\r\n    if(firstNameIsValid && lastNameIsValid && addressIsValid && phoneIsValid) {\r\n        formIsValid = true\r\n    }\r\n\r\n    const orderFormHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        console.log(orderedMealContext.meals)\r\n    }\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={orderFormHandler}>\r\n            <div className={`${styles['input-wrapper']} ${firstNameError ? styles.error : ''}`}>\r\n                <label htmlFor='first-name'>First Name</label>\r\n                <input \r\n                    type='text' \r\n                    id='first-name' \r\n                    onChange={firstNameValueHandler} \r\n                    onBlur={firstNameBlurHandler}\r\n                    value={firstNameVAlue} \r\n                />\r\n                {firstNameError && <p>First name should not be empty</p>}\r\n            </div>\r\n\r\n            <div className={`${styles['input-wrapper']} ${lastNameError ? styles.error : ''}`}>\r\n                <label htmlFor='last-name'>Last name</label>\r\n                <input \r\n                    type='text' \r\n                    id='last-name'\r\n                    onChange={lastNameValueHandler} \r\n                    onBlur={lastNameBlurHandler}\r\n                    value={lastNameVAlue} \r\n                />\r\n                {lastNameError && <p>Last name should not be empty.</p>}\r\n            </div>\r\n\r\n            <div className={`${styles['input-wrapper']} ${addressError ? styles.error : ''}`}>\r\n                <label htmlFor='address'>Address</label>\r\n                <input \r\n                    type='text'  \r\n                    id='address'\r\n                    onChange={addressValueHandler} \r\n                    onBlur={addressBlurHandler}\r\n                    value={addresVAlue}\r\n                />\r\n                {addressError && <p>Please enter valid address.</p>}\r\n            </div>\r\n\r\n            <div className={`${styles['input-wrapper']} ${phoneError ? styles.error : ''}`}>\r\n                <label htmlFor='phone'>Phone</label>\r\n                <input \r\n                    type='tel' \r\n                    id='phone'\r\n                    onChange={phoneValueHandler} \r\n                    onBlur={phoneBlurHandler}\r\n                    value={phoneVAlue}\r\n                />\r\n                {phoneError && <p>Please enter valid phone number.</p>}\r\n            </div>\r\n\r\n            <div className={styles.buttons}>\r\n                <Button type='button'>Back</Button>\r\n                <Button type='submit' disabled={!formIsValid} className={`${!formIsValid ? styles.disabled : ''}`}>Order</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ConfirmationForm"]},"metadata":{},"sourceType":"module"}