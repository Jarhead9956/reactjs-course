{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\11-practice-food-order-app\\\\code\\\\01-starting-project\\\\src\\\\components\\\\layout\\\\Menu.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useContext, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport Wrapper from \"../UI/Wrapper\";\nimport Button from \"../UI/Button\";\nimport OrderedMealContext from \"../contexts/orderedMeal-Context\";\nimport styles from \"./Menu.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst requestConfig = {\n  url: 'https://educationdb-97121.firebaseio.com/meals.json'\n};\n\nconst Menu = props => {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [amountInput, setAmountInput] = useState('');\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttp();\n  const orderedMealContext = useContext(OrderedMealContext);\n\n  const transformMenu = menuObj => {\n    const newData = [];\n\n    for (const key in menuObj) {\n      const id = key;\n      const data = menuObj[key];\n      newData.push({\n        id,\n        ...data\n      });\n    }\n\n    setMenu(newData);\n  };\n\n  useEffect(() => {\n    sendRequest(requestConfig, transformMenu);\n  }, []); // const amountHandler = (event) => {\n  //     const amountValue =  event.target.value\n  //     const inputId = event.target.getAttribute('data-key')\n  //     setMenu(meals => {\n  //         return meals.map(meal => {\n  //              return(meal.id === inputId ? {\n  //                  ...meal,\n  //                  amount: +amountValue\n  //              } : meal)\n  //          })\n  //      })\n  // }\n  // const mealHendler = (event) => {\n  //     event.preventDefault()\n  //     const mealId = event.target.getAttribute('data-key') \n  //     let orderedMeal = {}\n  //     menu.forEach(meal => {\n  //         if(meal.id === mealId) {\n  //             orderedMeal = {\n  //                 name: meal.name,\n  //                 describtion: meal.describtion,\n  //                 price: meal.price,\n  //                 id: meal.id,\n  //                 amount: +meal.amount\n  //             }\n  //         }\n  //     })\n  //     orderedMealContext.onOrder(orderedMeal)\n  //     setMenu(meals => {\n  //         return meals.map(meal => {\n  //              return(meal.id === mealId ? {\n  //                  ...meal,\n  //                  amount: ''\n  //              } : meal)\n  //          })\n  //      })\n  // }\n\n  const amountHandler = event => {\n    setAmountInput();\n  };\n\n  const mealHendler = event => {\n    event.preventDefault();\n    console.log(event.target.value); // menu.forEach(meal => {\n    //     if(meal.id === mealId) {\n    //         orderedMeal = {\n    //             name: meal.name,\n    //             describtion: meal.describtion,\n    //             price: meal.price,\n    //             id: meal.id,\n    //             amount: +meal.amount\n    //         }\n    //     }\n    // })\n    // orderedMealContext.onOrder(orderedMeal)\n    // setMenu(meals => {\n    //     return meals.map(meal => {\n    //          return(meal.id === mealId ? {\n    //              ...meal,\n    //              amount: ''\n    //          } : meal)\n    //      })\n    //  })\n  }; // return(\n  //     <Wrapper className={styles.flex}>\n  //         <div className={styles['menu-container']}>\n  //             {menu.map(item => {\n  //                 return(\n  //                     <form className={styles['meal-container']} key={item.id} data-key={item.id} onSubmit={mealHendler}>\n  //                         <div className={styles.meal} >\n  //                             <h4 className={styles.name} id=\"name\">{item.name}</h4>\n  //                             <p className={styles.describtion}>{item.describtion}</p>\n  //                             <p className={styles.price}>$ {item.price}</p>\n  //                         </div>\n  //                         <div className={styles.controls}>\n  //                             <label htmlFor=\"quantity\">Amount:</label>\n  //                             <input onChange={amountHandler} className={styles.input} type=\"number\" min=\"0\" id=\"quantity\" placeholder=\"0\" value={item.amount} data-key={item.id}/>\n  //                             <Button type=\"submit\" className={styles.button}>+ Add</Button>\n  //                         </div>\n  //                     </form>\n  //                 )\n  //             })}\n  //         </div>\n  //     </Wrapper>\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: styles.flex,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['menu-container'],\n      children: menu.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['meal-container'],\n          \"data-key\": item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.meal,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: styles.name,\n              id: \"name\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.describtion,\n              children: item.describtion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.price,\n              children: [\"$ \", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.controls,\n            onSubmit: mealHendler,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"quantity\",\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: amountHandler,\n              className: styles.input,\n              type: \"number\",\n              min: \"0\",\n              id: \"quantity\",\n              placeholder: \"0\",\n              value: item.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: styles.button,\n              children: \"+ Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"v7xX5iNqcSYxqDBAt5Z7Vc4EyEk=\", false, function () {\n  return [useHttp];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/11-practice-food-order-app/code/01-starting-project/src/components/layout/Menu.js"],"names":["react","useState","useContext","useEffect","useHttp","Wrapper","Button","OrderedMealContext","styles","requestConfig","url","Menu","props","menu","setMenu","amountInput","setAmountInput","isLoading","error","sendRequest","orderedMealContext","transformMenu","menuObj","newData","key","id","data","push","amountHandler","event","mealHendler","preventDefault","console","log","target","value","flex","map","item","meal","name","describtion","price","controls","input","amount","button"],"mappings":"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","sourcesContent":["import react, {useState,useContext, useEffect} from \"react\"\r\nimport useHttp from \"../../hooks/use-http\"\r\n\r\nimport Wrapper from \"../UI/Wrapper\"\r\nimport Button from \"../UI/Button\"\r\nimport OrderedMealContext from \"../contexts/orderedMeal-Context\"\r\n\r\nimport styles from \"./Menu.module.css\"\r\n\r\nconst requestConfig = {\r\n    url: 'https://educationdb-97121.firebaseio.com/meals.json'\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const [menu, setMenu] = useState([])\r\n    const [amountInput, setAmountInput] = useState('')\r\n\r\n    const {isLoading, error, sendRequest} = useHttp()\r\n\r\n    const orderedMealContext = useContext(OrderedMealContext)\r\n\r\n    const transformMenu = (menuObj) => {\r\n        const newData = []\r\n\r\n        for(const key in menuObj) {\r\n            const id = key\r\n            const data = menuObj[key]\r\n\r\n            newData.push({id, ...data})\r\n        }\r\n\r\n        setMenu(newData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        sendRequest(requestConfig, transformMenu)\r\n    },[])\r\n\r\n    // const amountHandler = (event) => {\r\n    //     const amountValue =  event.target.value\r\n    //     const inputId = event.target.getAttribute('data-key')\r\n        \r\n    //     setMenu(meals => {\r\n    //         return meals.map(meal => {\r\n    //              return(meal.id === inputId ? {\r\n    //                  ...meal,\r\n    //                  amount: +amountValue\r\n    //              } : meal)\r\n    //          })\r\n    //      })\r\n    // }\r\n\r\n    // const mealHendler = (event) => {\r\n    //     event.preventDefault()\r\n    //     const mealId = event.target.getAttribute('data-key') \r\n    //     let orderedMeal = {}\r\n\r\n    //     menu.forEach(meal => {\r\n    //         if(meal.id === mealId) {\r\n    //             orderedMeal = {\r\n    //                 name: meal.name,\r\n    //                 describtion: meal.describtion,\r\n    //                 price: meal.price,\r\n    //                 id: meal.id,\r\n    //                 amount: +meal.amount\r\n    //             }\r\n    //         }\r\n    //     })\r\n\r\n    //     orderedMealContext.onOrder(orderedMeal)\r\n        \r\n    //     setMenu(meals => {\r\n    //         return meals.map(meal => {\r\n    //              return(meal.id === mealId ? {\r\n    //                  ...meal,\r\n    //                  amount: ''\r\n    //              } : meal)\r\n    //          })\r\n    //      })\r\n    // }\r\n\r\n    const amountHandler = (event) => {\r\n        setAmountInput()\r\n    }\r\n\r\n    const mealHendler = (event) => {\r\n        event.preventDefault()\r\n        console.log(event.target.value)\r\n\r\n        // menu.forEach(meal => {\r\n        //     if(meal.id === mealId) {\r\n        //         orderedMeal = {\r\n        //             name: meal.name,\r\n        //             describtion: meal.describtion,\r\n        //             price: meal.price,\r\n        //             id: meal.id,\r\n        //             amount: +meal.amount\r\n        //         }\r\n        //     }\r\n        // })\r\n\r\n        // orderedMealContext.onOrder(orderedMeal)\r\n        \r\n        // setMenu(meals => {\r\n        //     return meals.map(meal => {\r\n        //          return(meal.id === mealId ? {\r\n        //              ...meal,\r\n        //              amount: ''\r\n        //          } : meal)\r\n        //      })\r\n        //  })\r\n    }\r\n    \r\n    // return(\r\n    //     <Wrapper className={styles.flex}>\r\n    //         <div className={styles['menu-container']}>\r\n    //             {menu.map(item => {\r\n    //                 return(\r\n    //                     <form className={styles['meal-container']} key={item.id} data-key={item.id} onSubmit={mealHendler}>\r\n    //                         <div className={styles.meal} >\r\n    //                             <h4 className={styles.name} id=\"name\">{item.name}</h4>\r\n    //                             <p className={styles.describtion}>{item.describtion}</p>\r\n    //                             <p className={styles.price}>$ {item.price}</p>\r\n    //                         </div>\r\n    //                         <div className={styles.controls}>\r\n    //                             <label htmlFor=\"quantity\">Amount:</label>\r\n    //                             <input onChange={amountHandler} className={styles.input} type=\"number\" min=\"0\" id=\"quantity\" placeholder=\"0\" value={item.amount} data-key={item.id}/>\r\n    //                             <Button type=\"submit\" className={styles.button}>+ Add</Button>\r\n    //                         </div>\r\n    //                     </form>\r\n    //                 )\r\n    //             })}\r\n    //         </div>\r\n    //     </Wrapper>\r\n    // )\r\n\r\n    return(\r\n        <Wrapper className={styles.flex}>\r\n            <div className={styles['menu-container']}>\r\n                {menu.map(item => {\r\n                    return(\r\n                        <div className={styles['meal-container']} key={item.id} data-key={item.id}>\r\n                            <div className={styles.meal} >\r\n                                <h4 className={styles.name} id=\"name\">{item.name}</h4>\r\n                                <p className={styles.describtion}>{item.describtion}</p>\r\n                                <p className={styles.price}>$ {item.price}</p>\r\n                            </div>\r\n                            <form className={styles.controls} onSubmit={mealHendler}>\r\n                                <label htmlFor=\"quantity\">Amount:</label>\r\n                                <input onChange={amountHandler} className={styles.input} type=\"number\" min=\"0\" id=\"quantity\" placeholder=\"0\" value={item.amount}/>\r\n                                <Button type=\"submit\" className={styles.button}>+ Add</Button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Menu"]},"metadata":{},"sourceType":"module"}