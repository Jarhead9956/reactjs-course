{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport react, { useState, useContext, useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport Wrapper from \"../UI/Wrapper\";\nimport Button from \"../UI/Button\";\nimport OrderedMealContext from \"../contexts/orderedMeal-Context\";\nimport styles from \"./Menu.module.css\";\nconst requestConfig = {\n  url: 'https://educationdb-97121.firebaseio.com/meals.json'\n};\n\nconst Menu = props => {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [amountInput, setAmountInput] = useState('');\n  const amountInputRef = useRef();\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttp();\n  const orderedMealContext = useContext(OrderedMealContext);\n\n  const transformMenu = menuObj => {\n    const newData = [];\n\n    for (const key in menuObj) {\n      const id = key;\n      const data = menuObj[key];\n      newData.push({\n        id,\n        ...data\n      });\n    }\n\n    setMenu(newData);\n  };\n\n  useEffect(() => {\n    sendRequest(requestConfig, transformMenu);\n  }, []); // const amountHandler = (event) => {\n  //     const amountValue =  event.target.value\n  //     const inputId = event.target.getAttribute('data-key')\n  //     setMenu(meals => {\n  //         return meals.map(meal => {\n  //              return(meal.id === inputId ? {\n  //                  ...meal,\n  //                  amount: +amountValue\n  //              } : meal)\n  //          })\n  //      })\n  // }\n  // const mealHendler = (event) => {\n  //     event.preventDefault()\n  //     const mealId = event.target.getAttribute('data-key') \n  //     let orderedMeal = {}\n  //     menu.forEach(meal => {\n  //         if(meal.id === mealId) {\n  //             orderedMeal = {\n  //                 name: meal.name,\n  //                 describtion: meal.describtion,\n  //                 price: meal.price,\n  //                 id: meal.id,\n  //                 amount: +meal.amount\n  //             }\n  //         }\n  //     })\n  //     orderedMealContext.onOrder(orderedMeal)\n  //     setMenu(meals => {\n  //         return meals.map(meal => {\n  //              return(meal.id === mealId ? {\n  //                  ...meal,\n  //                  amount: ''\n  //              } : meal)\n  //          })\n  //      })\n  // }    \n  // return(\n  //     <Wrapper className={styles.flex}>\n  //         <div className={styles['menu-container']}>\n  //             {menu.map(item => {\n  //                 return(\n  //                     <form className={styles['meal-container']} key={item.id} data-key={item.id} onSubmit={mealHendler}>\n  //                         <div className={styles.meal} >\n  //                             <h4 className={styles.name} id=\"name\">{item.name}</h4>\n  //                             <p className={styles.describtion}>{item.describtion}</p>\n  //                             <p className={styles.price}>$ {item.price}</p>\n  //                         </div>\n  //                         <div className={styles.controls}>\n  //                             <label htmlFor=\"quantity\">Amount:</label>\n  //                             <input onChange={amountHandler} className={styles.input} type=\"number\" min=\"0\" id=\"quantity\" placeholder=\"0\" value={item.amount} data-key={item.id}/>\n  //                             <Button type=\"submit\" className={styles.button}>+ Add</Button>\n  //                         </div>\n  //                     </form>\n  //                 )\n  //             })}\n  //         </div>\n  //     </Wrapper>\n  // )\n};\n\n_s(Menu, \"XePDf36M6yaCCBSkfl/mFhTvquM=\", false, function () {\n  return [useHttp];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/11-practice-food-order-app/code/01-starting-project/src/components/layout/Menu.js"],"names":["react","useState","useContext","useEffect","useRef","useHttp","Wrapper","Button","OrderedMealContext","styles","requestConfig","url","Menu","props","menu","setMenu","amountInput","setAmountInput","amountInputRef","isLoading","error","sendRequest","orderedMealContext","transformMenu","menuObj","newData","key","id","data","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,MAA/C,QAA4D,OAA5D;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE;AADa,CAAtB;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMiB,cAAc,GAAGd,MAAM,EAA7B;AAGA,QAAM;AAACe,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAkChB,OAAO,EAA/C;AAEA,QAAMiB,kBAAkB,GAAGpB,UAAU,CAACM,kBAAD,CAArC;;AAEA,QAAMe,aAAa,GAAIC,OAAD,IAAa;AAC/B,UAAMC,OAAO,GAAG,EAAhB;;AAEA,SAAI,MAAMC,GAAV,IAAiBF,OAAjB,EAA0B;AACtB,YAAMG,EAAE,GAAGD,GAAX;AACA,YAAME,IAAI,GAAGJ,OAAO,CAACE,GAAD,CAApB;AAEAD,MAAAA,OAAO,CAACI,IAAR,CAAa;AAACF,QAAAA,EAAD;AAAK,WAAGC;AAAR,OAAb;AACH;;AAEDb,IAAAA,OAAO,CAACU,OAAD,CAAP;AACH,GAXD;;AAaAtB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,WAAW,CAACX,aAAD,EAAgBa,aAAhB,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT,CAvBoB,CA2BpB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CA7FD;;GAAMX,I;UAMsCP,O;;;KANtCO,I;AA+FN,eAAeA,IAAf","sourcesContent":["import react, {useState,useContext, useEffect, useRef} from \"react\"\r\nimport useHttp from \"../../hooks/use-http\"\r\n\r\nimport Wrapper from \"../UI/Wrapper\"\r\nimport Button from \"../UI/Button\"\r\nimport OrderedMealContext from \"../contexts/orderedMeal-Context\"\r\n\r\nimport styles from \"./Menu.module.css\"\r\n\r\nconst requestConfig = {\r\n    url: 'https://educationdb-97121.firebaseio.com/meals.json'\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const [menu, setMenu] = useState([])\r\n    const [amountInput, setAmountInput] = useState('')\r\n    const amountInputRef = useRef();\r\n\r\n\r\n    const {isLoading, error, sendRequest} = useHttp()\r\n\r\n    const orderedMealContext = useContext(OrderedMealContext)\r\n\r\n    const transformMenu = (menuObj) => {\r\n        const newData = []\r\n\r\n        for(const key in menuObj) {\r\n            const id = key\r\n            const data = menuObj[key]\r\n\r\n            newData.push({id, ...data})\r\n        }\r\n\r\n        setMenu(newData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        sendRequest(requestConfig, transformMenu)\r\n    },[])\r\n\r\n    // const amountHandler = (event) => {\r\n    //     const amountValue =  event.target.value\r\n    //     const inputId = event.target.getAttribute('data-key')\r\n        \r\n    //     setMenu(meals => {\r\n    //         return meals.map(meal => {\r\n    //              return(meal.id === inputId ? {\r\n    //                  ...meal,\r\n    //                  amount: +amountValue\r\n    //              } : meal)\r\n    //          })\r\n    //      })\r\n    // }\r\n\r\n    // const mealHendler = (event) => {\r\n    //     event.preventDefault()\r\n    //     const mealId = event.target.getAttribute('data-key') \r\n    //     let orderedMeal = {}\r\n\r\n    //     menu.forEach(meal => {\r\n    //         if(meal.id === mealId) {\r\n    //             orderedMeal = {\r\n    //                 name: meal.name,\r\n    //                 describtion: meal.describtion,\r\n    //                 price: meal.price,\r\n    //                 id: meal.id,\r\n    //                 amount: +meal.amount\r\n    //             }\r\n    //         }\r\n    //     })\r\n\r\n    //     orderedMealContext.onOrder(orderedMeal)\r\n        \r\n    //     setMenu(meals => {\r\n    //         return meals.map(meal => {\r\n    //              return(meal.id === mealId ? {\r\n    //                  ...meal,\r\n    //                  amount: ''\r\n    //              } : meal)\r\n    //          })\r\n    //      })\r\n    // }    \r\n    \r\n    // return(\r\n    //     <Wrapper className={styles.flex}>\r\n    //         <div className={styles['menu-container']}>\r\n    //             {menu.map(item => {\r\n    //                 return(\r\n    //                     <form className={styles['meal-container']} key={item.id} data-key={item.id} onSubmit={mealHendler}>\r\n    //                         <div className={styles.meal} >\r\n    //                             <h4 className={styles.name} id=\"name\">{item.name}</h4>\r\n    //                             <p className={styles.describtion}>{item.describtion}</p>\r\n    //                             <p className={styles.price}>$ {item.price}</p>\r\n    //                         </div>\r\n    //                         <div className={styles.controls}>\r\n    //                             <label htmlFor=\"quantity\">Amount:</label>\r\n    //                             <input onChange={amountHandler} className={styles.input} type=\"number\" min=\"0\" id=\"quantity\" placeholder=\"0\" value={item.amount} data-key={item.id}/>\r\n    //                             <Button type=\"submit\" className={styles.button}>+ Add</Button>\r\n    //                         </div>\r\n    //                     </form>\r\n    //                 )\r\n    //             })}\r\n    //         </div>\r\n    //     </Wrapper>\r\n    // )\r\n\r\n}\r\n\r\nexport default Menu"]},"metadata":{},"sourceType":"module"}