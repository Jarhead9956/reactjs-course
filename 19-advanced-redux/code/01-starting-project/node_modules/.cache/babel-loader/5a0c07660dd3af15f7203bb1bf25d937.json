{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cartSlice',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    fetchItemsFromDatabase(state, actions) {\n      state.items = actions.payload.items ? actions.payload.items : [];\n      state.totalQuantity = actions.payload.totalQuantity;\n    },\n\n    addItemToCart(state, actions) {\n      const newItem = actions.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      console.log(state.items);\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, actions) {\n      const id = actions.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","fetchItemsFromDatabase","state","actions","payload","addItemToCart","newItem","existingItem","find","item","id","console","log","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions"],"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/19-advanced-redux/code/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cartSlice',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false\r\n    },\r\n    reducers: {\r\n        fetchItemsFromDatabase(state, actions) {\r\n            state.items = actions.payload.items ? actions.payload.items : []\r\n            state.totalQuantity = actions.payload.totalQuantity\r\n        },\r\n        addItemToCart(state, actions) {\r\n            const newItem = actions.payload\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            console.log(state.items)\r\n            state.totalQuantity++\r\n            state.changed = true\r\n            if(!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            }else {\r\n                existingItem.quantity++\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state, actions) {\r\n            const id = actions.payload\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--\r\n            state.changed = true\r\n            if(existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }else {\r\n                existingItem.quantity--\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions\r\n\r\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,WADoB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE,EADG;IAEVC,aAAa,EAAE,CAFL;IAGVC,OAAO,EAAE;EAHC,CAFY;EAO1BC,QAAQ,EAAE;IACNC,sBAAsB,CAACC,KAAD,EAAQC,OAAR,EAAiB;MACnCD,KAAK,CAACL,KAAN,GAAcM,OAAO,CAACC,OAAR,CAAgBP,KAAhB,GAAwBM,OAAO,CAACC,OAAR,CAAgBP,KAAxC,GAAgD,EAA9D;MACAK,KAAK,CAACJ,aAAN,GAAsBK,OAAO,CAACC,OAAR,CAAgBN,aAAtC;IACH,CAJK;;IAKNO,aAAa,CAACH,KAAD,EAAQC,OAAR,EAAiB;MAC1B,MAAMG,OAAO,GAAGH,OAAO,CAACC,OAAxB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA7C,CAArB;MACAC,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACL,KAAlB;MACAK,KAAK,CAACJ,aAAN;MACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;;MACA,IAAG,CAACQ,YAAJ,EAAkB;QACdL,KAAK,CAACL,KAAN,CAAYgB,IAAZ,CAAiB;UACbH,EAAE,EAAEJ,OAAO,CAACI,EADC;UAEbI,KAAK,EAAER,OAAO,CAACQ,KAFF;UAGbC,QAAQ,EAAE,CAHG;UAIbC,UAAU,EAAEV,OAAO,CAACQ,KAJP;UAKbnB,IAAI,EAAEW,OAAO,CAACW;QALD,CAAjB;MAOH,CARD,MAQM;QACFV,YAAY,CAACQ,QAAb;QACAR,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BV,OAAO,CAACQ,KAA5D;MACH;IACJ,CAvBK;;IAwBNI,kBAAkB,CAAChB,KAAD,EAAQC,OAAR,EAAiB;MAC/B,MAAMO,EAAE,GAAGP,OAAO,CAACC,OAAnB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;MACAR,KAAK,CAACJ,aAAN;MACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;;MACA,IAAGQ,YAAY,CAACQ,QAAb,KAA0B,CAA7B,EAAgC;QAC5Bb,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYsB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;MACH,CAFD,MAEM;QACFH,YAAY,CAACQ,QAAb;QACAR,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACO,KAAjE;MACH;IACJ;;EAnCK;AAPgB,CAAD,CAA7B;AA8CA,OAAO,MAAMM,WAAW,GAAG1B,SAAS,CAACS,OAA9B;AAEP,eAAeT,SAAf"},"metadata":{},"sourceType":"module"}