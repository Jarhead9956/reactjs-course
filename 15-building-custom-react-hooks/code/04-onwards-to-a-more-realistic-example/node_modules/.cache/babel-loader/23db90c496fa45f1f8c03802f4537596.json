{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-15-building-custom-react-hooks\\\\code\\\\04-onwards-to-a-more-realistic-example\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './components/hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reqConfig = {\n  url: 'https://educationdb-97121.firebaseio.com/tasks.json'\n};\n\nfunction App() {\n  _s();\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // const [tasks, setTasks] = useState([]);\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://educationdb-97121.firebaseio.com/tasks.json'\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n  //     const data = await response.json();\n  //     const loadedTasks = [];\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n  // useEffect(() => {\n  //   fetchTasks();\n  // }, []);\n  // const taskAddHandler = (task) => {\n  //   setTasks((prevTasks) => prevTasks.concat(task));\n  // };\n  // const {tasks, isLoading, error, fetchTasks, enterTaskHandler} = useHttp()\n  const transformTask = tasksObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in tasksObj) {\n      loadedTasks.push({\n        id: taskKey,\n        text: tasksObj[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp();\n  useEffect(() => {\n    fetchTasks(reqConfig, transformTask);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddNewTa: transformTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TArFHRbA+zNTFa9DK38NK99y1AI=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-15-building-custom-react-hooks/code/04-onwards-to-a-more-realistic-example/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","reqConfig","url","App","transformTask","tasksObj","loadedTasks","taskKey","push","id","text","setTasks","tasks","isLoading","error","sendRequest","fetchTasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,GAAG,EAAE;AADW,CAAlB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA,QAAMC,aAAa,GAAIC,QAAD,IAAc;AAClC,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;AAC9BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,QAAQ,CAACE,OAAD,CAAR,CAAkBG;AAAvC,OAAjB;AACD;;AAEDC,IAAAA,QAAQ,CAACL,WAAD,CAAR;AACD,GARD;;AAUA,QAAM,CAACM,KAAD,EAAQD,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACgB,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAA8ChB,OAAO,EAA3D;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,UAAU,CAACf,SAAD,EAAYG,aAAZ,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAU,MAAA,UAAU,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEQ,KADT;AAEE,MAAA,OAAO,EAAEC,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxEQb,G;UAqD6CH,O;;;KArD7CG,G;AA0ET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Tasks from './components/Tasks/Tasks';\r\nimport NewTask from './components/NewTask/NewTask';\r\nimport useHttp from './components/hooks/use-http';\r\n\r\nconst reqConfig = {\r\n  url: 'https://educationdb-97121.firebaseio.com/tasks.json'\r\n}\r\n\r\nfunction App() {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [error, setError] = useState(null);\r\n  // const [tasks, setTasks] = useState([]);\r\n\r\n  // const fetchTasks = async (taskText) => {\r\n  //   setIsLoading(true);\r\n  //   setError(null);\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       'https://educationdb-97121.firebaseio.com/tasks.json'\r\n  //     );\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error('Request failed!');\r\n  //     }\r\n\r\n  //     const data = await response.json();\r\n\r\n  //     const loadedTasks = [];\r\n\r\n  //     for (const taskKey in data) {\r\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n  //     }\r\n\r\n  //     setTasks(loadedTasks);\r\n  //   } catch (err) {\r\n  //     setError(err.message || 'Something went wrong!');\r\n  //   }\r\n  //   setIsLoading(false);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   fetchTasks();\r\n  // }, []);\r\n\r\n  // const taskAddHandler = (task) => {\r\n  //   setTasks((prevTasks) => prevTasks.concat(task));\r\n  // };\r\n\r\n  \r\n  // const {tasks, isLoading, error, fetchTasks, enterTaskHandler} = useHttp()\r\n  const transformTask = (tasksObj) => {\r\n    const loadedTasks = [];\r\n\r\n    for (const taskKey in tasksObj) {\r\n      loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\r\n    }\r\n\r\n    setTasks(loadedTasks);\r\n  }\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const {isLoading, error, sendRequest: fetchTasks} = useHttp()\r\n\r\n  useEffect(() => {\r\n    fetchTasks(reqConfig, transformTask)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NewTask  onAddNewTa={transformTask}/>\r\n\r\n      <Tasks\r\n        items={tasks}\r\n        loading={isLoading}\r\n        error={error}\r\n        onFetch={fetchTasks}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}