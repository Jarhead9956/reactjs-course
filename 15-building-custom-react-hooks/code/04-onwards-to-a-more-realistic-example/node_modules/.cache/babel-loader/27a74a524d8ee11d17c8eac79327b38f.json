{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-15-building-custom-react-hooks\\\\code\\\\04-onwards-to-a-more-realistic-example\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // const enterTaskHandler = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://educationdb-97121.firebaseio.com/tasks.json',\n  //       {\n  //         method: 'POST',\n  //         body: JSON.stringify({ text: taskText }),\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //       }\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n  //     const data = await response.json();\n  //     const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n  //     const createdTask = { id: generatedId, text: taskText };\n  //     props.onAddTask(createdTask);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n  const httpRequest = useHttp();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), httpRequest.error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"gHtxX728YEE0sMVPIlB5ld9WNRA=\", true);\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-15-building-custom-react-hooks/code/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","NewTask","props","httpRequest","useHttp","enterTaskHandler","isLoading","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,WAAW,GAAGC,OAAO,EAA3B;AAEA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEC,gBAAvB;AAAyC,MAAA,OAAO,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,WAAW,CAACI,KAAZ,iBAAqB;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3CD;;GAAMN,O;;KAAAA,O;AA6CN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nimport Section from '../UI/Section';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst NewTask = (props) => {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [error, setError] = useState(null);\r\n\r\n  // const enterTaskHandler = async (taskText) => {\r\n  //   setIsLoading(true);\r\n  //   setError(null);\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       'https://educationdb-97121.firebaseio.com/tasks.json',\r\n  //       {\r\n  //         method: 'POST',\r\n  //         body: JSON.stringify({ text: taskText }),\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //         },\r\n  //       }\r\n  //     );\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error('Request failed!');\r\n  //     }\r\n\r\n  //     const data = await response.json();\r\n\r\n  //     const generatedId = data.name; // firebase-specific => \"name\" contains generated id\r\n  //     const createdTask = { id: generatedId, text: taskText };\r\n\r\n  //     props.onAddTask(createdTask);\r\n  //   } catch (err) {\r\n  //     setError(err.message || 'Something went wrong!');\r\n  //   }\r\n  //   setIsLoading(false);\r\n  // };\r\n\r\n  const httpRequest = useHttp()\r\n\r\n  return (\r\n    <Section>\r\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\r\n      {httpRequest.error && <p>{ error}</p>}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default NewTask;\r\n"]},"metadata":{},"sourceType":"module"}