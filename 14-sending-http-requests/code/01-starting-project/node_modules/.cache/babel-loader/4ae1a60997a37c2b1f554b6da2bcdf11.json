{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-14-sending-http-requests\\\\code\\\\01-starting-project\\\\src\\\\components\\\\AddMovie.js\";\nimport React, { useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  //   const titleRef = useRef('');\n  //   const openingTextRef = useRef('');\n  //   const releaseDateRef = useRef('');\n  const [title, setTitle] = useState('');\n  const [openingText, setOpeningText] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n\n  const titleHandler = event => {\n    setTitle(event.target.value);\n  };\n\n  const openingHandler = event => {\n    setOpeningText(event.target.value);\n  };\n\n  const releaseHandler = event => {\n    setReleaseDate(event.target.value);\n  };\n\n  function submitHandler(event) {\n    event.preventDefault(); // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value\n    };\n    props.onAddMovie(movie);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    onChange: titleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"opening-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Opening Text\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"5\",\n    id: \"opening-text\",\n    onChange: openingHandler,\n    value: openingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"date\",\n    onChange: releaseHandler,\n    value: releaseDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Add Movie\"));\n}\n\nexport default AddMovie;","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-14-sending-http-requests/code/01-starting-project/src/components/AddMovie.js"],"names":["React","useRef","useState","classes","AddMovie","props","title","setTitle","openingText","setOpeningText","releaseDate","setReleaseDate","titleHandler","event","target","value","openingHandler","releaseHandler","submitHandler","preventDefault","movie","titleRef","current","openingTextRef","releaseDateRef","onAddMovie","control"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACzB;AACA;AACA;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAA+BT,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC5BN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAC9BJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIJ,KAAD,IAAW;AAC9BF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAIF,WAASG,aAAT,CAAuBL,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACM,cAAN,GAD4B,CAG5B;;AAEA,UAAMC,KAAK,GAAG;AACZd,MAAAA,KAAK,EAAEe,QAAQ,CAACC,OAAT,CAAiBP,KADZ;AAEZP,MAAAA,WAAW,EAAEe,cAAc,CAACD,OAAf,CAAuBP,KAFxB;AAGZL,MAAAA,WAAW,EAAEc,cAAc,CAACF,OAAf,CAAuBP;AAHxB,KAAd;AAMAV,IAAAA,KAAK,CAACoB,UAAN,CAAiBL,KAAjB;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEF,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACuB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,QAAQ,EAAEd,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACuB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,cAAtB;AAAqC,IAAA,QAAQ,EAAEV,cAA/C;AAA+D,IAAA,KAAK,EAAER,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACuB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,MAAtB;AAA6B,IAAA,QAAQ,EAAET,cAAvC;AAAuD,IAAA,KAAK,EAAEP,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CADF;AAiBD;;AAED,eAAeN,QAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n\r\nfunction AddMovie(props) {\r\n//   const titleRef = useRef('');\r\n//   const openingTextRef = useRef('');\r\n//   const releaseDateRef = useRef('');\r\n    const [title, setTitle] = useState('')\r\n    const [openingText, setOpeningText] = useState('')\r\n    const [releaseDate, setReleaseDate] =useState('')\r\n\r\n    const titleHandler = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    const openingHandler = (event) => {\r\n        setOpeningText(event.target.value)\r\n    }\r\n\r\n    const releaseHandler = (event) => {\r\n        setReleaseDate(event.target.value)\r\n    }\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // could add validation here...\r\n\r\n    const movie = {\r\n      title: titleRef.current.value,\r\n      openingText: openingTextRef.current.value,\r\n      releaseDate: releaseDateRef.current.value,\r\n    };\r\n\r\n    props.onAddMovie(movie);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor='title'>Title</label>\r\n        <input type='text' id='title' onChange={titleHandler} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='opening-text'>Opening Text</label>\r\n        <textarea rows='5' id='opening-text' onChange={openingHandler} value={openingText}></textarea>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='date'>Release Date</label>\r\n        <input type='text' id='date' onChange={releaseHandler} value={releaseDate} />\r\n      </div>\r\n      <button>Add Movie</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddMovie;\r\n"]},"metadata":{},"sourceType":"module"}