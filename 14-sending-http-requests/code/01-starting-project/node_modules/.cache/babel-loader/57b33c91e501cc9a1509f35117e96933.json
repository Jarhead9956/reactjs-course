{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-14-sending-http-requests\\\\code\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetchMoviesHandler = useCallback(() => {\n    setIsLoading(true);\n    fetch('https://educationdb-97121.firebaseio.com/movies.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      return response.json();\n    }).then(data => {\n      console.log(data);\n\n      for (const key in object) {\n        if (Object.hasOwnProperty.call(object, key)) {\n          const element = object[key];\n          const test = Object.entries(data);\n          console.log(test);\n        }\n      } // const transformedMovies = data.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n      // setMoviesData(transformedMovies);\n\n\n      setIsLoading(false);\n    }).catch(e => {\n      setError(e.message);\n    });\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]); // const fetchMoviesHandler = useCallback(async() => {\n  //   setIsLoading(true)\n  //   try {\n  //     const response = await fetch('https://swapi.dev/api/films/')\n  //     if(!response.ok) {\n  //       throw new Error('Something went wrong!')\n  //     }\n  //     const data = await response.json()\n  //     const transformedMovies = data.results.map(movieData => {\n  //       return {\n  //         id: movieData.episode_id,\n  //         title: movieData.title,\n  //         openingText: movieData.opening_crawl,\n  //         releaseDate: movieData.release_date,\n  //       }\n  //     })\n  //     setMoviesData(transformedMovies)\n  //   } catch (e) {\n  //     setError(e.message)\n  //   }\n  //   setIsLoading(false)\n  // }, [])\n  // useEffect(() => {\n  //    fetchMoviesHandler()\n  // }, [fetchMoviesHandler])\n\n  const addMovieHandler = async movie => {\n    try {\n      const response = await fetch('https://educationdb-97121.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"No movies found\");\n\n  if (moviesData.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: moviesData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-14-sending-http-requests/code/01-starting-project/src/App.js"],"names":["React","useState","useCallback","useEffect","MoviesList","AddMovie","App","moviesData","setMoviesData","isLoading","setIsLoading","error","setError","fetchMoviesHandler","fetch","then","response","ok","Error","json","data","console","log","key","object","Object","hasOwnProperty","call","element","test","entries","catch","e","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\n\r\nimport MoviesList from './components/MoviesList';\r\nimport AddMovie from './components/AddMovie';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [moviesData, setMoviesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  const fetchMoviesHandler = useCallback(() => {\r\n    setIsLoading(true)\r\n    fetch('https://educationdb-97121.firebaseio.com/movies.json')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Something went wrong!');\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((data) => {\r\n        console.log(data)\r\n        for (const key in object) {\r\n          if (Object.hasOwnProperty.call(object, key)) {\r\n            const element = object[key];\r\n            const test = Object.entries(data)\r\n            console.log(test)\r\n          }\r\n        }\r\n        // const transformedMovies = data.map((movieData) => {\r\n        //   return {\r\n        //     id: movieData.episode_id,\r\n        //     title: movieData.title,\r\n        //     openingText: movieData.opening_crawl,\r\n        //     releaseDate: movieData.release_date,\r\n        //   };\r\n        // });\r\n        // setMoviesData(transformedMovies);\r\n        setIsLoading(false)\r\n      }).catch(e => {\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchMoviesHandler()\r\n  }, [fetchMoviesHandler])\r\n\r\n  // const fetchMoviesHandler = useCallback(async() => {\r\n  //   setIsLoading(true)\r\n  //   try {\r\n  //     const response = await fetch('https://swapi.dev/api/films/')\r\n  //     if(!response.ok) {\r\n  //       throw new Error('Something went wrong!')\r\n  //     }\r\n\r\n  //     const data = await response.json()\r\n\r\n  //     const transformedMovies = data.results.map(movieData => {\r\n  //       return {\r\n  //         id: movieData.episode_id,\r\n  //         title: movieData.title,\r\n  //         openingText: movieData.opening_crawl,\r\n  //         releaseDate: movieData.release_date,\r\n  //       }\r\n  //     })\r\n\r\n  //     setMoviesData(transformedMovies)\r\n  //   } catch (e) {\r\n  //     setError(e.message)\r\n  //   }\r\n  //   setIsLoading(false)\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //    fetchMoviesHandler()\r\n  // }, [fetchMoviesHandler])\r\n\r\n  const addMovieHandler = async(movie) => {\r\n    try {\r\n      const response = await fetch('https://educationdb-97121.firebaseio.com/movies.json', {\r\n      method: 'POST',\r\n      body: JSON.stringify(movie),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch(error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  let content = <p>No movies found</p>\r\n  if(moviesData.length > 0) {\r\n    content = <MoviesList movies={moviesData} />\r\n  }\r\n\r\n  if(isLoading) {\r\n    content = <p>Loading...</p>\r\n  }\r\n\r\n  if(error) {\r\n    content = <p>{error}</p>\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <AddMovie onAddMovie={addMovieHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}