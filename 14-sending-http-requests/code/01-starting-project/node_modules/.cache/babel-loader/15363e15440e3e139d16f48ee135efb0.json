{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-14-sending-http-requests\\\\code\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(''); //***********USE FETCH */\n\n  const fetchMoviesHandler = useCallback(() => {\n    setIsLoading(true);\n    fetch('https://educationdb-97121.firebaseio.com/movies.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      return response.json();\n    }).then(data => {\n      const transformedMovies = [];\n\n      for (const key in data) {\n        transformedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n\n      setMoviesData(transformedMovies);\n      setIsLoading(false);\n    }).catch(e => {\n      setError(e.message);\n    });\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  const addMovieHandler = movie => {\n    fetch('https://educationdb-97121.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {});\n  }; //********USE ASYNC AWAIT */\n  // const fetchMoviesHandler = useCallback(async() => {\n  //   setIsLoading(true)\n  //   try {\n  //     const response = await fetch('https://swapi.dev/api/films/')\n  //     if(!response.ok) {\n  //       throw new Error('Something went wrong!')\n  //     }\n  //     const data = await response.json()\n  //     const transformedMovies = data.results.map(movieData => {\n  //       return {\n  //         id: movieData.episode_id,\n  //         title: movieData.title,\n  //         openingText: movieData.opening_crawl,\n  //         releaseDate: movieData.release_date,\n  //       }\n  //     })\n  //     setMoviesData(transformedMovies)\n  //   } catch (e) {\n  //     setError(e.message)\n  //   }\n  //   setIsLoading(false)\n  // }, [])\n  // useEffect(() => {\n  //    fetchMoviesHandler()\n  // }, [fetchMoviesHandler])\n  // const addMovieHandler = async(movie) => {\n  //   try {\n  //     const response = await fetch('https://educationdb-97121.firebaseio.com/movies.json', {\n  //     method: 'POST',\n  //     body: JSON.stringify(movie),\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //     });\n  //     const data = await response.json();\n  //     console.log(data);\n  //   } catch(error) {\n  //     console.log(error)\n  //   }\n  // }\n\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"No movies found\");\n\n  if (moviesData.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: moviesData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-14-sending-http-requests/code/01-starting-project/src/App.js"],"names":["React","useState","useCallback","useEffect","MoviesList","AddMovie","App","moviesData","setMoviesData","isLoading","setIsLoading","error","setError","fetchMoviesHandler","fetch","then","response","ok","Error","json","data","transformedMovies","key","push","id","title","openingText","releaseDate","catch","e","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\n\r\nimport MoviesList from './components/MoviesList';\r\nimport AddMovie from './components/AddMovie';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [moviesData, setMoviesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  //***********USE FETCH */\r\n  const fetchMoviesHandler = useCallback(() => {\r\n    setIsLoading(true)\r\n    fetch('https://educationdb-97121.firebaseio.com/movies.json')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Something went wrong!');\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((data) => {\r\n        const transformedMovies = []\r\n        for (const key in data) {\r\n          transformedMovies.push({\r\n            id:key,\r\n            title: data[key].title,\r\n            openingText: data[key].openingText,\r\n            releaseDate: data[key].releaseDate\r\n          })\r\n        }\r\n\r\n        setMoviesData(transformedMovies)\r\n        setIsLoading(false)\r\n      }).catch(e => {\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchMoviesHandler()\r\n  }, [fetchMoviesHandler])\r\n\r\n  const addMovieHandler = (movie) => {\r\n    fetch('https://educationdb-97121.firebaseio.com/movies.json', {\r\n      method: 'POST',\r\n      body: JSON.stringify(movie),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(data => {\r\n      \r\n    })\r\n  }\r\n\r\n\r\n  //********USE ASYNC AWAIT */\r\n\r\n  // const fetchMoviesHandler = useCallback(async() => {\r\n  //   setIsLoading(true)\r\n  //   try {\r\n  //     const response = await fetch('https://swapi.dev/api/films/')\r\n  //     if(!response.ok) {\r\n  //       throw new Error('Something went wrong!')\r\n  //     }\r\n\r\n  //     const data = await response.json()\r\n\r\n  //     const transformedMovies = data.results.map(movieData => {\r\n  //       return {\r\n  //         id: movieData.episode_id,\r\n  //         title: movieData.title,\r\n  //         openingText: movieData.opening_crawl,\r\n  //         releaseDate: movieData.release_date,\r\n  //       }\r\n  //     })\r\n\r\n  //     setMoviesData(transformedMovies)\r\n  //   } catch (e) {\r\n  //     setError(e.message)\r\n  //   }\r\n  //   setIsLoading(false)\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //    fetchMoviesHandler()\r\n  // }, [fetchMoviesHandler])\r\n\r\n  // const addMovieHandler = async(movie) => {\r\n  //   try {\r\n  //     const response = await fetch('https://educationdb-97121.firebaseio.com/movies.json', {\r\n  //     method: 'POST',\r\n  //     body: JSON.stringify(movie),\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //     });\r\n  //     const data = await response.json();\r\n  //     console.log(data);\r\n  //   } catch(error) {\r\n  //     console.log(error)\r\n  //   }\r\n  // }\r\n\r\n  let content = <p>No movies found</p>\r\n  if(moviesData.length > 0) {\r\n    content = <MoviesList movies={moviesData} />\r\n  }\r\n\r\n  if(isLoading) {\r\n    content = <p>Loading...</p>\r\n  }\r\n\r\n  if(error) {\r\n    content = <p>{error}</p>\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <AddMovie onAddMovie={addMovieHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}