{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-14-sending-http-requests\\\\code\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(''); // const fetchMoviesHandler = () => {\n  //   setIsLoading(true)\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then(response => {\n  //       if(!response) {\n  //         return new Error('Someting went wrong')\n  //       }\n  //       return response.json()\n  //     })\n  //     .then((data) => {\n  //       const transformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMoviesData(transformedMovies);\n  //       setIsLoading(false)\n  //     }).catch(e => {\n  //       setError(e)\n  //       console.log(e)\n  //     })\n  // }\n\n  const fetchMoviesHandler = async () => {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movie => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, !isLoading && moviesData.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: moviesData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 49\n    }\n  }), !isLoading && moviesData.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 51\n    }\n  }, \"Found no movies.\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-14-sending-http-requests/code/01-starting-project/src/App.js"],"names":["React","useState","MoviesList","App","moviesData","setMoviesData","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movie","id","movieData","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,kBAAkB,GAAG,YAAW;AACpCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AAClD,aAAO;AACLC,QAAAA,EAAE,EAAEC,SAAS,CAACC,UADT;AAELC,QAAAA,KAAK,EAAEF,SAAS,CAACE,KAFZ;AAGAC,QAAAA,WAAW,EAAEH,SAAS,CAACI,aAHvB;AAIAC,QAAAA,WAAW,EAAEL,SAAS,CAACM;AAJvB,OAAP;AAMD,KAPyB,CAA1B;AAQD,GAbD;;AAeA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEhB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAcF,UAAU,CAACuB,MAAX,GAAoB,CAAlC,iBAAuC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEvB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAEG,CAACE,SAAD,IAAcF,UAAU,CAACuB,MAAX,KAAsB,CAApC,iBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAF5C,EAGGrB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHhB,CAJF,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport MoviesList from './components/MoviesList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [moviesData, setMoviesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  // const fetchMoviesHandler = () => {\r\n  //   setIsLoading(true)\r\n  //   fetch('https://swapi.dev/api/films/')\r\n  //     .then(response => {\r\n  //       if(!response) {\r\n  //         return new Error('Someting went wrong')\r\n  //       }\r\n\r\n  //       return response.json()\r\n  //     })\r\n  //     .then((data) => {\r\n  //       const transformedMovies = data.results.map((movieData) => {\r\n  //         return {\r\n  //           id: movieData.episode_id,\r\n  //           title: movieData.title,\r\n  //           openingText: movieData.opening_crawl,\r\n  //           releaseDate: movieData.release_date,\r\n  //         };\r\n  //       });\r\n  //       setMoviesData(transformedMovies);\r\n  //       setIsLoading(false)\r\n  //     }).catch(e => {\r\n  //       setError(e)\r\n  //       console.log(e)\r\n  //     })\r\n  // }\r\n\r\n  const fetchMoviesHandler = async() => {\r\n    setIsLoading(true)\r\n    const response = await fetch('https://swapi.dev/api/films/')\r\n    const data = await response.json()\r\n\r\n    const transformedMovies = data.results.map(movie => {\r\n      return {\r\n        id: movieData.episode_id,\r\n        title: movieData.title,\r\n             openingText: movieData.opening_crawl,\r\n             releaseDate: movieData.release_date,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>\r\n        {!isLoading && moviesData.length > 0 && <MoviesList movies={moviesData} />}\r\n        {!isLoading && moviesData.length === 0 && <p>Found no movies.</p>}\r\n        {isLoading && <p>Loading...</p>}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}