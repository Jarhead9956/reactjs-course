{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-10-side-effects-reducers-context-api\\\\code\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './contexts/aurh-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // useEffect(() => {\n  //   const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn')\n  //   if(storedUserLoggedInInformation === '1') {\n  //     setIsLoggedIn(true)\n  //   }\n  // }, [])\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem('isLoggedIn', '1')\n  //   setIsLoggedIn(true);\n  // };\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn')\n  //   setIsLoggedIn(false);\n  // };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-10-side-effects-reducers-context-api/code/01-starting-project/src/App.js"],"names":["React","useState","useEffect","Fragment","Login","Home","MainHeader","AuthContext","App","isLoggedIn","loginHandler","logoutHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,GAAT,GAAe;AACb;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACC,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGD,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAhCQH,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nimport Login from './components/Login/Login';\r\nimport Home from './components/Home/Home';\r\nimport MainHeader from './components/MainHeader/MainHeader';\r\nimport AuthContext from './contexts/aurh-context';\r\n\r\nfunction App() {\r\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn')\r\n\r\n  //   if(storedUserLoggedInInformation === '1') {\r\n  //     setIsLoggedIn(true)\r\n  //   }\r\n  // }, [])\r\n\r\n  // const loginHandler = (email, password) => {\r\n  //   // We should of course check email and password\r\n  //   // But it's just a dummy/ demo anyways\r\n  //   localStorage.setItem('isLoggedIn', '1')\r\n  //   setIsLoggedIn(true);\r\n  // };\r\n\r\n  // const logoutHandler = () => {\r\n  //   localStorage.removeItem('isLoggedIn')\r\n  //   setIsLoggedIn(false);\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MainHeader />\r\n      <main>\r\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\r\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}