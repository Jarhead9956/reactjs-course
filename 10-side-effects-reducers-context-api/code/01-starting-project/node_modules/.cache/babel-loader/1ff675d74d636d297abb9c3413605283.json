{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-10-side-effects-reducers-context-api\\\\code\\\\01-starting-project\\\\src\\\\contexts\\\\theme-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport AuthContext from \"./aurh-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  type: 'yellow',\n  onChangeTheme: () => {}\n});\nexport const ThemeContextProvider = props => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const [themeColor, setThemeColor] = useState('yellow');\n\n  const changeThemeHandler = () => {\n    console.log();\n\n    if (themeColor === 'yellow') {\n      setThemeColor('white');\n    } else {\n      setThemeColor('yellow');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      type: themeColor,\n      onChangeTheme: changeThemeHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeContextProvider, \"wWLdMrefQedrAfosothu1blyfbw=\");\n\n_c = ThemeContextProvider;\nexport default ThemeContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-10-side-effects-reducers-context-api/code/01-starting-project/src/contexts/theme-context.js"],"names":["React","useContext","useState","AuthContext","ThemeContext","createContext","type","onChangeTheme","ThemeContextProvider","props","authCtx","themeColor","setThemeColor","changeThemeHandler","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AACrCC,EAAAA,IAAI,EAAE,QAD+B;AAErCC,EAAAA,aAAa,EAAE,MAAM,CAAE;AAFc,CAApB,CAArB;AAKA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAMC,OAAO,GAAGT,UAAU,CAACE,WAAD,CAA1B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,QAAD,CAA5C;;AAEA,QAAMW,kBAAkB,GAAG,MAAM;AAC7BC,IAAAA,OAAO,CAACC,GAAR;;AACA,QAAGJ,UAAU,KAAK,QAAlB,EAA4B;AACxBC,MAAAA,aAAa,CAAC,OAAD,CAAb;AACH,KAFD,MAEM;AACFA,MAAAA,aAAa,CAAC,QAAD,CAAb;AACH;AACJ,GAPD;;AASA,sBACI,QAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHN,MAAAA,IAAI,EAAEK,UADH;AAEHJ,MAAAA,aAAa,EAAEM;AAFZ,KADX;AAAA,cAMKJ,KAAK,CAACO;AANX;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvBM;;GAAMR,oB;;KAAAA,oB;AAyBb,eAAeJ,YAAf","sourcesContent":["import React, {useContext, useState} from \"react\"\r\nimport AuthContext from \"./aurh-context\"\r\n\r\nconst ThemeContext = React.createContext({\r\n    type: 'yellow',\r\n    onChangeTheme: () => {}\r\n})\r\n\r\nexport const ThemeContextProvider = (props) => {\r\n    const authCtx = useContext(AuthContext)\r\n    const [themeColor, setThemeColor] = useState('yellow')\r\n    \r\n    const changeThemeHandler = () => {\r\n        console.log()\r\n        if(themeColor === 'yellow') {\r\n            setThemeColor('white')\r\n        }else {\r\n            setThemeColor('yellow')\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <ThemeContext.Provider\r\n            value={{\r\n                type: themeColor,\r\n                onChangeTheme: changeThemeHandler\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeContext"]},"metadata":{},"sourceType":"module"}