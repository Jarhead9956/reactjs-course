{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-10-side-effects-reducers-context-api\\\\code\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../contexts/aurh-context';\nimport InputComponent from '../UI/input/input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputsReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      emailValue: action.emailVal,\n      emailIsValid: action.emailVal.includes('@'),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordIsValid,\n      formIsValid: action.emailVal.includes('@') && state.passwordValue.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailIsValid,\n      passwordValue: action.passwordVal,\n      passwordIsValid: action.passwordVal.trim().length > 6,\n      formIsValid: state.emailValue.includes('@') && action.passwordVal.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailValue.includes('@'),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordValue.trim().length > 6,\n      formIsValid: state.emailValue.includes('@') && state.passwordValue.trim().length > 6\n    };\n  }\n\n  return {\n    emailValue: '',\n    emailIsValid: false,\n    passwordValue: '',\n    passwordIsValid: false,\n    formIsValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const ctx = useContext(AuthContext); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  const [inputsState, dispatchInputs] = useReducer(inputsReducer, {\n    emailValue: '',\n    emailIsValid: null,\n    passwordValue: '',\n    passwordIsValid: null,\n    formIsValid: false\n  }); // useEffect(() => {\n  //   setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\n  //   console.log('useEffect')\n  // }, [enteredEmail, enteredPassword])\n  // useEffect(() => {\n  //   const identifer = setTimeout(() => {\n  //     console.log('ADD EFFECT')\n  //     setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\n  //   }, 1000)\n  //   return () => {\n  //     console.log('CLEARED')\n  //     clearTimeout(identifer)\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchInputs({\n      type: 'USER_INPUT',\n      emailVal: event.target.value\n    }); // setFormIsValid(event.target.value.includes('@') && inputsState.passwordValue.trim().length > 6)\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchInputs({\n      type: 'PASSWORD_INPUT',\n      passwordVal: event.target.value\n    }); // setFormIsValid(inputsState.emailValue.includes('@') && event.target.value.trim().length > 6)\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes('@'));\n    dispatchInputs({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchInputs({\n      type: 'INPUT_BLUR'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    ctx.onLogin(inputsState.emailValue, inputsState.passwordValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(InputComponent, {\n        valid: inputsState.emailIsValid,\n        type: \"email\",\n        id: \"email\",\n        value: inputsState.passwordValue,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${inputsState.passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: inputsState.passwordValue,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !inputsState.formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"n1vVxmPR+diGxjUzjWz9Y6CCpic=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-10-side-effects-reducers-context-api/code/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","InputComponent","inputsReducer","state","action","type","emailValue","emailVal","emailIsValid","includes","passwordValue","passwordIsValid","formIsValid","trim","length","passwordVal","Login","props","ctx","inputsState","dispatchInputs","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\nimport AuthContext from '../../contexts/aurh-context';\r\nimport InputComponent from '../UI/input/input';\r\n\r\nconst inputsReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { \r\n      emailValue: action.emailVal,\r\n      emailIsValid: action.emailVal.includes('@'),\r\n      passwordValue: state.passwordValue,\r\n      passwordIsValid: state.passwordIsValid,\r\n      formIsValid: action.emailVal.includes('@') && state.passwordValue.trim().length > 6\r\n     };\r\n  }\r\n  if(action.type === 'PASSWORD_INPUT') {\r\n    return {\r\n      emailValue: state.emailValue,\r\n      emailIsValid: state.emailIsValid,\r\n      passwordValue: action.passwordVal,\r\n      passwordIsValid: action.passwordVal.trim().length > 6,\r\n      formIsValid: state.emailValue.includes('@') && action.passwordVal.trim().length > 6\r\n    }\r\n  }\r\n  if(action.type === 'INPUT_BLUR') {\r\n    return {\r\n      emailValue: state.emailValue,\r\n      emailIsValid: state.emailValue.includes('@'),\r\n      passwordValue: state.passwordValue,\r\n      passwordIsValid: state.passwordValue.trim().length > 6,\r\n      formIsValid: state.emailValue.includes('@') && state.passwordValue.trim().length > 6\r\n    }\r\n  }\r\n  return {\r\n    emailValue: '',\r\n    emailIsValid: false,\r\n    passwordValue: '',\r\n    passwordIsValid: false,\r\n    formIsValid: false\r\n  }\r\n}\r\n\r\nconst Login = (props) => {\r\n  const ctx = useContext(AuthContext)\r\n  // const [enteredEmail, setEnteredEmail] = useState('');\r\n  // const [emailIsValid, setEmailIsValid] = useState();\r\n  // const [enteredPassword, setEnteredPassword] = useState('');\r\n  // const [passwordIsValid, setPasswordIsValid] = useState();\r\n  // const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [inputsState, dispatchInputs] = useReducer(inputsReducer, {\r\n    emailValue: '',\r\n    emailIsValid: null,\r\n    passwordValue: '',\r\n    passwordIsValid: null,\r\n    formIsValid: false\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\r\n  //   console.log('useEffect')\r\n  // }, [enteredEmail, enteredPassword])\r\n\r\n  // useEffect(() => {\r\n  //   const identifer = setTimeout(() => {\r\n  //     console.log('ADD EFFECT')\r\n  //     setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\r\n  //   }, 1000)\r\n\r\n  //   return () => {\r\n  //     console.log('CLEARED')\r\n  //     clearTimeout(identifer)\r\n  //   }\r\n  // }, [enteredEmail, enteredPassword])\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchInputs({type: 'USER_INPUT', emailVal: event.target.value});\r\n\r\n    // setFormIsValid(event.target.value.includes('@') && inputsState.passwordValue.trim().length > 6)\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchInputs({type: 'PASSWORD_INPUT', passwordVal: event.target.value})\r\n\r\n    // setFormIsValid(inputsState.emailValue.includes('@') && event.target.value.trim().length > 6)\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    // setEmailIsValid(emailState.value.includes('@'));\r\n    dispatchInputs({type: 'INPUT_BLUR'})\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchInputs({type: 'INPUT_BLUR'})\r\n    \r\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    ctx.onLogin(inputsState.emailValue, inputsState.passwordValue);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        {/* <div\r\n          className={`${classes.control} ${\r\n            inputsState.emailIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={inputsState.emailValue}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div> */}\r\n        <InputComponent \r\n          valid={inputsState.emailIsValid}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={inputsState.passwordValue}\r\n          onChange={passwordChangeHandler}\r\n          onBlur={validatePasswordHandler}\r\n        />\r\n        <div\r\n          className={`${classes.control} ${\r\n            inputsState.passwordIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={inputsState.passwordValue}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!inputsState.formIsValid}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}