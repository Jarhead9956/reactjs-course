{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\react-complete-guide-code-10-side-effects-reducers-context-api\\\\code\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputsReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      emailValue: action.emailVal,\n      emailIsValid: action.emailVal.includes('@'),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordValue.trim().length > 6,\n      formIsValid: action.email.includes('@') && state.passwordValue.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailValue.includes('@'),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordValue.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailIsValid,\n      passwordValue: action.passwordVal,\n      passwordIsValid: action.passwordVal.trim().length > 6\n    };\n  }\n\n  return {\n    emailValue: '',\n    emailIsValid: false,\n    passwordValue: '',\n    passwordIsValid: false,\n    formIsValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  // const [formIsValid, setFormIsValid] = useState(false);\n  const [inputsState, dispatchInputs] = useReducer(inputsReducer, {\n    emailValue: '',\n    emailIsValid: null,\n    passwordValue: '',\n    passwordIsValid: null,\n    formIsValid: false\n  }); // useEffect(() => {\n  //   setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\n  //   console.log('useEffect')\n  // }, [enteredEmail, enteredPassword])\n  // useEffect(() => {\n  //   const identifer = setTimeout(() => {\n  //     console.log('ADD EFFECT')\n  //     setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\n  //   }, 1000)\n  //   return () => {\n  //     console.log('CLEARED')\n  //     clearTimeout(identifer)\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchInputs({\n      type: 'USER_INPUT',\n      emailVal: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && inputsState.passwordValue.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchInputs({\n      type: 'PASSWORD_INPUT',\n      passwordVal: event.target.value\n    });\n    setFormIsValid(inputsState.emailValue.includes('@') && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes('@'));\n    dispatchInputs({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchInputs({\n      type: 'INPUT_BLUR'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(inputsState.emailValue, inputsState.passwordValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${inputsState.emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: inputsState.emailValue,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${inputsState.passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: inputsState.passwordValue,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"x9nGwXtq4qHzU4aC7UiTd9zLmZ0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/react-complete-guide-code-10-side-effects-reducers-context-api/code/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","inputsReducer","state","action","type","emailValue","emailVal","emailIsValid","includes","passwordValue","passwordIsValid","trim","length","formIsValid","email","passwordVal","Login","props","inputsState","dispatchInputs","emailChangeHandler","event","target","value","setFormIsValid","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst inputsReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { \r\n      emailValue: action.emailVal,\r\n      emailIsValid: action.emailVal.includes('@'),\r\n      passwordValue: state.passwordValue,\r\n      passwordIsValid: state.passwordValue.trim().length > 6,\r\n      formIsValid: action.email.includes('@') && state.passwordValue.trim().length > 6\r\n     };\r\n  }\r\n  if(action.type === 'INPUT_BLUR') {\r\n    return {\r\n      emailValue: state.emailValue,\r\n      emailIsValid: state.emailValue.includes('@'),\r\n      passwordValue: state.passwordValue,\r\n      passwordIsValid: state.passwordValue.trim().length > 6\r\n    }\r\n  }\r\n  if(action.type === 'PASSWORD_INPUT') {\r\n    return {\r\n      emailValue: state.emailValue,\r\n      emailIsValid: state.emailIsValid,\r\n      passwordValue: action.passwordVal,\r\n      passwordIsValid: action.passwordVal.trim().length > 6\r\n    }\r\n  }\r\n  return {\r\n    emailValue: '',\r\n    emailIsValid: false,\r\n    passwordValue: '',\r\n    passwordIsValid: false,\r\n    formIsValid: false\r\n  }\r\n}\r\n\r\nconst Login = (props) => {\r\n  // const [enteredEmail, setEnteredEmail] = useState('');\r\n  // const [emailIsValid, setEmailIsValid] = useState();\r\n  // const [enteredPassword, setEnteredPassword] = useState('');\r\n  // const [passwordIsValid, setPasswordIsValid] = useState();\r\n  // const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [inputsState, dispatchInputs] = useReducer(inputsReducer, {\r\n    emailValue: '',\r\n    emailIsValid: null,\r\n    passwordValue: '',\r\n    passwordIsValid: null,\r\n    formIsValid: false\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\r\n  //   console.log('useEffect')\r\n  // }, [enteredEmail, enteredPassword])\r\n\r\n  // useEffect(() => {\r\n  //   const identifer = setTimeout(() => {\r\n  //     console.log('ADD EFFECT')\r\n  //     setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\r\n  //   }, 1000)\r\n\r\n  //   return () => {\r\n  //     console.log('CLEARED')\r\n  //     clearTimeout(identifer)\r\n  //   }\r\n  // }, [enteredEmail, enteredPassword])\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchInputs({type: 'USER_INPUT', emailVal: event.target.value});\r\n\r\n    setFormIsValid(event.target.value.includes('@') && inputsState.passwordValue.trim().length > 6)\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchInputs({type: 'PASSWORD_INPUT', passwordVal: event.target.value})\r\n\r\n    setFormIsValid(inputsState.emailValue.includes('@') && event.target.value.trim().length > 6)\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    // setEmailIsValid(emailState.value.includes('@'));\r\n    dispatchInputs({type: 'INPUT_BLUR'})\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchInputs({type: 'INPUT_BLUR'})\r\n    \r\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onLogin(inputsState.emailValue, inputsState.passwordValue);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={`${classes.control} ${\r\n            inputsState.emailIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={inputsState.emailValue}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${classes.control} ${\r\n            inputsState.passwordIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={inputsState.passwordValue}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}