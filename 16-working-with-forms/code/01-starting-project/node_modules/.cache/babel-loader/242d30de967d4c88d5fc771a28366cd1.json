{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\16-working-with-forms\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [nameInputValue, setNameInputValue] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = nameInputValue.trim() === '';\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n\n  const changeNameInputHandler = event => {\n    setNameInputValue(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (nameInputValue.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (nameInputValue.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    console.log('disabled');\n    setEnteredNameIsValid(true);\n    setNameInputValue('');\n  };\n\n  let nameInputClases = nameInputIsValid ? 'form-control invalid' : 'form-control';\n  console.log(nameInputIsValid);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClases,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeNameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: nameInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ofPXj3HqApSuW/ZZ90JkoxPyl0U=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/16-working-with-forms/code/01-starting-project/src/components/SimpleInput.js"],"names":["React","useState","SimpleInput","props","nameInputValue","setNameInputValue","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsValid","changeNameInputHandler","event","target","value","nameInputBlurHandler","setEnteredNameIsValid","formSubmitHandler","preventDefault","console","log","nameInputClases"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMO,kBAAkB,GAAGJ,cAAc,CAACK,IAAf,OAA0B,EAArD;AACA,QAAMC,gBAAgB,GAAG,CAACF,kBAAD,IAAuBF,kBAAhD;;AAGA,QAAMK,sBAAsB,GAAIC,KAAD,IAAW;AACxCP,IAAAA,iBAAiB,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtCL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAGH,cAAc,CAACK,IAAf,OAA0B,EAA7B,EAAiC;AAC/BO,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GATD;;AAWA,QAAMC,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN;AACAX,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAGH,cAAc,CAACK,IAAf,OAA0B,EAA7B,EAAiC;AAC/BO,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAJ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAX,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAXD;;AAcA,MAAIgB,eAAe,GAAGX,gBAAgB,GAAG,sBAAH,GAA4B,cAAlE;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,gBAAZ;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEO,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,eAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEV,sBAHZ;AAIE,QAAA,MAAM,EAAEI,oBAJV;AAKE,QAAA,KAAK,EAAEX;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGM,gBAAgB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1DD;;GAAMR,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n  const [nameInputValue, setNameInputValue] = useState('')\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\r\n\r\n  const enteredNameIsValid = nameInputValue.trim() === ''\r\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched\r\n\r\n\r\n  const changeNameInputHandler = (event) => {\r\n    setNameInputValue(event.target.value)\r\n  }\r\n\r\n  const nameInputBlurHandler = (event) => {\r\n    setEnteredNameTouched(true)\r\n\r\n    if(nameInputValue.trim() === '') {\r\n      setEnteredNameIsValid(false)\r\n      return\r\n    }\r\n    \r\n    setEnteredNameIsValid(true)\r\n  }\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault()\r\n    setEnteredNameTouched(true)\r\n\r\n    if(nameInputValue.trim() === '') {\r\n      setEnteredNameIsValid(false)\r\n      return\r\n    }\r\n    console.log('disabled')\r\n    setEnteredNameIsValid(true)\r\n    setNameInputValue('')\r\n  }\r\n\r\n  \r\n  let nameInputClases = nameInputIsValid ? 'form-control invalid' : 'form-control' \r\n  console.log(nameInputIsValid)\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className={nameInputClases}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input \r\n          type='text' \r\n          id='name' \r\n          onChange={changeNameInputHandler} \r\n          onBlur={nameInputBlurHandler}\r\n          value={nameInputValue}/>\r\n        {nameInputIsValid && <p className='error-text'>Name must not be empty.</p>}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        {/* <button disabled={nameInputIsValid} >Submit</button> */}\r\n        <button >Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"]},"metadata":{},"sourceType":"module"}