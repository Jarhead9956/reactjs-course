{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\16-working-with-forms\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    inputValue: nameInputValue,\n    inputIsTouched: enteredNameTouched,\n    entere\n  } = useInput(); // const [nameInputValue, setNameInputValue] = useState('')\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\n  const [emailInputValue, setEmailInputValue] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false); // const enteredNameIsValid = nameInputValue.trim() !== ''\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n  const enteredEmailIsValid = emailInputValue.match(/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const changeEmailInputHandler = event => {\n    setEmailInputValue(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      console.log('disabled');\n      return;\n    }\n\n    setNameInputValue('');\n    setEnteredNameTouched(false);\n    setEmailInputValue('');\n    setEnteredEmailTouched(false);\n    console.log('sucsess');\n  };\n\n  let nameInputClases = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  let emailInputClases = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClases,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeNameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: nameInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClases,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: changeEmailInputHandler,\n        onBlur: emailInputBlurHandler,\n        value: emailInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"mRSq3gOq9BBHpcJN1TxJ3lDb8ng=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/16-working-with-forms/code/01-starting-project/src/components/SimpleInput.js"],"names":["React","useState","useInput","SimpleInput","props","inputValue","nameInputValue","inputIsTouched","enteredNameTouched","entere","emailInputValue","setEmailInputValue","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","match","emailInputIsInvalid","formIsValid","enteredNameIsValid","changeEmailInputHandler","event","target","value","emailInputBlurHandler","formSubmitHandler","preventDefault","console","log","setNameInputValue","setEnteredNameTouched","nameInputClases","nameInputIsInvalid","emailInputClases","changeNameInputHandler","nameInputBlurHandler"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport useInput from '../hooks/use-input'\r\n\r\nconst SimpleInput = (props) => {\r\n  const {\r\n    inputValue: nameInputValue,\r\n    inputIsTouched: enteredNameTouched,\r\n    entere\r\n  } = useInput()\r\n\r\n  // const [nameInputValue, setNameInputValue] = useState('')\r\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false)\r\n  \r\n  const [emailInputValue, setEmailInputValue] = useState('')\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\r\n\r\n  // const enteredNameIsValid = nameInputValue.trim() !== ''\r\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\r\n  \r\n  const enteredEmailIsValid = emailInputValue.match(/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/)\r\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched\r\n  \r\n  let formIsValid = false\r\n\r\n  if(enteredNameIsValid && enteredEmailIsValid) {\r\n    formIsValid = true\r\n  }\r\n\r\n\r\n  \r\n\r\n  const changeEmailInputHandler = (event) => {\r\n    setEmailInputValue(event.target.value)\r\n  }\r\n\r\n  const emailInputBlurHandler = (event) => {\r\n    setEnteredEmailTouched(true)\r\n  }\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    setEnteredEmailTouched(true)\r\n\r\n    if(!enteredNameIsValid || !enteredEmailIsValid) {\r\n      console.log('disabled')\r\n      return\r\n    }\r\n\r\n    setNameInputValue('')\r\n    setEnteredNameTouched(false)\r\n\r\n    setEmailInputValue('')\r\n    setEnteredEmailTouched(false)\r\n\r\n    console.log('sucsess')\r\n  }\r\n\r\n  let nameInputClases = nameInputIsInvalid ? 'form-control invalid' : 'form-control' \r\n  let emailInputClases = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className={nameInputClases}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input \r\n          type='text' \r\n          id='name' \r\n          onChange={changeNameInputHandler} \r\n          onBlur={nameInputBlurHandler}\r\n          value={nameInputValue}/>\r\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty.</p>}\r\n      </div>\r\n\r\n      <div className={emailInputClases}>\r\n        <label htmlFor='email'>Your Email</label>\r\n        <input \r\n          type='email' \r\n          id='email' \r\n          onChange={changeEmailInputHandler} \r\n          onBlur={emailInputBlurHandler}\r\n          value={emailInputValue}/>\r\n        {emailInputIsInvalid && <p className='error-text'>Please enter valid email.</p>}\r\n      </div>\r\n\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid} >Submit</button>\r\n        \r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"]},"metadata":{},"sourceType":"module"}