{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ico\\\\Desktop\\\\Education\\\\UDEMY COURSES\\\\REACT-COURSE\\\\16-working-with-forms\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [nameInputValue, setNameInputValue] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false); // let inputNameIsValid = false\n\n  const changeNameInputHandler = event => {\n    setNameInputValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (nameInputValue.trim() !== '') {\n      setEnteredNameIsValid(true);\n      console.log('name' + enteredNameIsValid);\n    }\n  };\n\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  let nameInputClases = nameInputIsValid ? 'form-control invalid' : 'form-control';\n  console.log(nameInputIsValid);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClases,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeNameInputHandler,\n        value: nameInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"e45LhPEbE0qulYNy6fwcT6kcybU=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Ico/Desktop/Education/UDEMY COURSES/REACT-COURSE/16-working-with-forms/code/01-starting-project/src/components/SimpleInput.js"],"names":["React","useState","SimpleInput","props","nameInputValue","setNameInputValue","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","changeNameInputHandler","event","target","value","formSubmitHandler","preventDefault","trim","console","log","nameInputIsValid","nameInputClases"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D,CAH6B,CAK7B;;AAEA,QAAMS,sBAAsB,GAAIC,KAAD,IAAW;AACxCN,IAAAA,iBAAiB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACI,cAAN;AACAN,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAGL,cAAc,CAACY,IAAf,OAA0B,EAA7B,EAAiC;AAC/BT,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASZ,kBAArB;AACD;AAEF,GATD;;AAWA,QAAMa,gBAAgB,GAAG,CAACb,kBAAD,IAAuBE,kBAAhD;AACA,MAAIY,eAAe,GAAGD,gBAAgB,GAAG,sBAAH,GAA4B,cAAlE;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEL,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,eAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEV,sBAAvC;AAA+D,QAAA,KAAK,EAAEN;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGe,gBAAgB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;GAAMjB,W;;KAAAA,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n  const [nameInputValue, setNameInputValue] = useState('')\r\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\r\n\r\n  // let inputNameIsValid = false\r\n\r\n  const changeNameInputHandler = (event) => {\r\n    setNameInputValue(event.target.value)\r\n  }\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault()\r\n    setEnteredNameTouched(true)\r\n\r\n    if(nameInputValue.trim() !== '') {\r\n      setEnteredNameIsValid(true)\r\n      console.log('name' + enteredNameIsValid)\r\n    }\r\n\r\n  }\r\n\r\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched\r\n  let nameInputClases = nameInputIsValid ? 'form-control invalid' : 'form-control' \r\n  console.log(nameInputIsValid)\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className={nameInputClases}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' onChange={changeNameInputHandler} value={nameInputValue}/>\r\n        {nameInputIsValid && <p className='error-text'>Name must not be empty.</p>}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"]},"metadata":{},"sourceType":"module"}